name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Add PostgreSQL as a service container
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432  # Maps port 5432 on the host to 5432 in the container
        # Ensure the service is ready before running the job
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Optional: Set environment variables for Spring Boot to connect to PostgreSQL
    - name: Configure Spring Boot Data Source
      run: |
        echo "spring.datasource.url=jdbc:postgresql://localhost:5432/testdb" >> src/main/resources/application.properties
        echo "spring.datasource.username=testuser" >> src/main/resources/application.properties
        echo "spring.datasource.password=testpassword" >> src/main/resources/application.properties
        echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml

    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
